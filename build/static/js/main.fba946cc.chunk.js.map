{"version":3,"sources":["theme/colors.js","theme/images.js","images/logoPoke.png","components/Images.jsx","components/Containers.jsx","components/List.jsx","components/Card.jsx","components/Buttons.jsx","components/Modals.jsx","components/Header.jsx","images/pokeball.svg","components/Loader.jsx","graphql/pokemon.js","pages/ListPokemon.jsx","context/pokemonContext.js","App.js","reportWebVitals.js","index.js"],"names":["colors","colorOne","colorTwo","colorThree","colorFour","backgroundContainerColor1","backgroundContainerColor2","buttonColor1","buttonColor2","buttonTextColor","buttonHoverColor","buttonHoverTextColor","typesColor","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","ice","typesBgColor","Images","LogoPoke","ImgLogoComp","styled","img","ImgLogo","props","src","RootContainerComp","div","RootContainer","children","ContainereComp","Color","Container","GridViewComp","GridView","CardViewComp","type","name","CardImageComp","CardNameComp","p","CardPokemon","onClick","style","margin","marginTop","width","background","borderRadius","pokeImg","pokeName","fontWeight","ButtonComp","cl","bg","SimpleButton","ModalComp","show","ModalContentComp","ModalImageComp","DetailsWrapper","SubDetailsWrapper","TypesComp","MovesComp","ModalDetailPoke","button","data","dataModal","display","types","map","r","i","moves","slice","move","height","padding","sprites","front_default","back_default","closeFn","HeaderHomeComp","nav","HeaderHome","LoaderOverlay","PokeBallComp","PokeBallLoader","Pokeball","client","ApolloClient","uri","process","cache","InMemoryCache","fetchListPokemon","a","Promise","resolve","reject","query","gql","then","res","pokemons","catch","err","console","log","navigateData","url","fetch","json","ListPokemon","React","useState","setData","nextUrl","setNextUrl","prevUrl","setPrevUrl","isRequest","setIsRequest","setDataModal","isShowModal","setIsShowModal","getPokemonData","pokemon","all","navigate","next","previous","results","useEffect","onClickItem","id","PokeContext","createContext","PokeState","catchPokemon","window","localStorage","setItem","getCaughtPokemon","renameCaughtPokemon","App","Poke","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fba946cc.chunk.js","sourcesContent":["const colors ={\n    colorOne:'#ffff',\n    colorTwo:'#96d47f',\n    colorThree:'#da67a8',\n    colorFour:'#daf1e4',\n    backgroundContainerColor1:'#47837b',\n    backgroundContainerColor2:'#75cb9c',\n    buttonColor1:'#4d876f',\n    buttonColor2:'#32858d',\n    buttonTextColor:'',\n    buttonHoverColor:'',\n    buttonHoverTextColor:'',\n    typesColor:{\n        fire: '#FDDFDF',\n        grass: '#DEFDE0',\n        electric: '#ffdb24',\n        water: '#DEF3FD',\n        ground: '#e39b00',\n        rock: '#d6b367',\n        fairy: '#fceaff',\n        poison: '#c76dbe',\n        bug: '#6dc76d',\n        dragon: '#97b3e6',\n        psychic: '#eaeda1',\n        flying: '#67c5d6',\n        fighting: '#d66769',\n        normal: '#F5F5F5',\n        ice:'#3fd0d4',\n        psychic:'#49804b',\n        steel:'#cfcfcf',\n        ghost:'#695282',\n        dark: '#200142',\n        shadow:'#30385c',\n        unknown:'#878787',\n    },\n    typesBgColor:{\n        fire: '#000',\n        grass: '#000',\n        electric: '#000',\n        water: '#000',\n        ground: '#ffff',\n        rock: '#000',\n        fairy: '#000',\n        poison: '#000',\n        bug: '#000',\n        dragon: '#fff',\n        psychic: '#000',\n        flying: '#ffff',\n        fighting: '#ffff',\n        normal: '#000',\n        ice:'#ffff',\n        psychic:'#ffff',\n        steel:'#ffff',\n        ghost:'#ffff',\n        dark: '#ffff',\n        shadow:'#ffff',\n        unknown:'#ffff',\n    },\n}\n\nexport default  colors","import logo from  '../images/logoPoke.png'\nconst Images ={\n   LogoPoke:logo\n}\n\nexport default Images","export default __webpack_public_path__ + \"static/media/logoPoke.d07ac06b.png\";","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\n// # Mobile\n// only screen and (min-width: 3600px)\n\n// # Tablet\n// only screen and (min-width: 768px)\n\n// # Desktop\n// only screen and (min-width: 992px)\n\n// # Huge\n// only screen and (min-width: 1280px)\n\nconst ImgLogoComp=styled.img`\n    display:inline;\n    margin-left:auto;\n    margin-right:auto;\n    @media only screen and (min-width: 360px){\n        width:200px;\n    }\n    @media only screen and (min-width: 768px){\n        width:100px;\n    }\n    @media  only screen and (min-width: 992px){\n        width:150px;\n    }\n    @media only screen and (min-width: 1280px){\n        width:200px;\n    }\n`\nexport const ImgLogo = (props)=>{\n    return(<ImgLogoComp src={props.src}/>)\n}\n\n\n\n","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\nconst RootContainerComp=styled.div`\n  padding:0px;\n  margin:0px;\n  width:100%;\n`\nexport const RootContainer = (props)=>{\n    return(\n        <RootContainerComp>\n            {(props.children)}\n        </RootContainerComp>\n\n    )\n}\n\nconst ContainereComp=styled.div`\n    width:800px;\n    margin:0px auto;\n    background: linear-gradient(0deg, ${Color.colorTwo} 35%, ${Color.backgroundContainerColor2} 100%);\n    @media only screen and (min-width: 360px){\n\n    }\n    @media only screen and (min-width: 768px){\n\n    }\n    @media  only screen and (min-width: 992px){\n\n    }\n    @media only screen and (min-width: 1280px){\n\n    }\n`\n\nexport const Container = (props) =>{\n    return(\n        // <center>\n            <ContainereComp>\n                {(props.children)}\n            </ContainereComp>\n        // </center>\n    )\n}\n\n\n","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\n// # Mobile\n// only screen and (min-width: 3600px)\n\n// # Tablet\n// only screen and (min-width: 768px)\n\n// # Desktop\n// only screen and (min-width: 992px)\n\n// # Huge\n// only screen and (min-width: 1280px)\n\nconst GridViewComp=styled.div`\n    display:block;\n    margin-top:100px;\n    @media only screen and (min-width: 360px){\n\n    }\n    @media only screen and (min-width: 768px){\n\n    }\n    @media  only screen and (min-width: 992px){\n\n    }\n    @media only screen and (min-width: 1280px){\n\n    }\n`\nexport const GridView = (props)=>{\n   return(\n       <GridViewComp>\n           {(props.children)}\n       </GridViewComp>\n   )\n}\n\n\n\n","import { from } from '@apollo/client'\nimport styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\n// # Mobile\n// only screen and (min-width: 3600px)\n\n// # Tablet\n// only screen and (min-width: 768px)\n\n// # Desktop\n// only screen and (min-width: 992px)\n\n// # Huge\n// only screen and (min-width: 1280px)\n\nfunction generateCardBackgroundColor(type){\n    const colors=Color.typesColor\n    return type ? colors[type[0].type.name] : '#ffff'\n}\nconst CardViewComp=styled.div`\n    box-sizing:border-box;\n    font-family: 'Yusei Magic', sans-serif;\n    display:inline-block;\n    text-align:center;\n    border-radius:5vh;\n    width:246px;\n    min-height:300px;\n    overflow:hidden;\n    margin:10px;\n    padding:10px;\n    background:${props=>generateCardBackgroundColor(props.type)};\n    @media only screen and (min-width: 360px){\n        -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n        -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n        box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n    }\n    @media only screen and (min-width: 768px){\n\n    }\n    @media  only screen and (min-width: 992px){\n\n    }\n    @media only screen and (min-width: 1280px){\n\n    }\n    &:hover {\n        cursor: pointer;\n        opacity: 0.3;\n        // cursor: url(your-image-path.png), auto; ganti cursor\n        // img{\n        //     width:100%;\n        // }\n        // p{\n        //     position:fixed;\n        // }\n    }\n`\nconst CardImageComp=styled.img`\n    width:90%;\n`\nconst CardNameComp=styled.p`\n    font-size:20pt;\n    font-weight:bold;\n    display:block;\n    marrgin:0;\n    border-radius:2vh;\n    background:${Color.colorFour}\n`\n\nexport const CardPokemon = (props)=>{\n   return(\n       <CardViewComp onClick={props.onClick} type={props.type}>\n           <div style={{margin:'auto',marginTop:20,width:'70%',background:'rgba(255, 255, 255, 0.6)',borderRadius:'1000vh'}}>\n                <CardImageComp src={props.pokeImg}/>\n           </div>\n           <CardNameComp>{props.pokeName}</CardNameComp>\n           <p style={{fontWeight:'bold'}}>Type: {props.type[0].type.name}</p>\n           <p style={{}}>Owned: 0</p>\n       </CardViewComp>\n   )\n}\n\n\n\n","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\nconst ButtonComp=styled.div`\n    border: 1px solid ${props=> props.cl ? props.bg : '#801515' };\n    width:80px;\n    background: transparent;\n    color:${props=> props.cl ? props.bg : '#801515' };\n    font-size: 24px;\n    text-align:center;\n    padding: 0.5em 0.1em;\n    display:inline-block;\n    border-radius:5vh;\n    &:hover{\n        cursor:pointer;\n        opacity: 0.8;\n        background: ${props=> props.bg ? props.bg : '#550000' };\n        color: ${props=> props.cl ? props.cl : '#FFFFFF' }\n    }\n`\nexport const SimpleButton = (props)=>{\n\n   return(\n       <ButtonComp onClick={props.onClick} bg={props.bg} cl={props.cl}>{props.children}</ButtonComp>\n   )\n}\n\n\n\n","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\nimport colors from '../theme/colors'\nimport {SimpleButton} from './Buttons'\n\n\nconst ModalComp=styled.div`\n    font-family: 'Yusei Magic', sans-serif;\n    display: ${props=>props.show ? 'inline-block' : 'none'};\n    position: fixed; /* Stay in place */\n    z-index: 1;\n    padding-top: 100px;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n    `\nfunction generateCardBackgroundColor(type){\n    const colors=Color.typesColor\n    return type ? colors[type[0].type.name] : '#ffff'\n}\nconst ModalContentComp=styled.div`\n    background-color: ${props=>generateCardBackgroundColor(props.type)};\n    border-radius:5vh;\n    box-sizing:border-box;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    height:fit-content;\n\n    @media only screen and (min-width: 360px){\n\n    }\n    @media only screen and (min-width: 768px){\n\n    }\n    @media  only screen and (min-width: 992px){\n\n    }\n    @media only screen and (min-width: 1280px){\n        margin: 5% auto;\n    }\n`\nconst ModalImageComp=styled.img`\n    width: 300px;\n    heigth:auto;\n`\nconst DetailsWrapper=styled.div`\n    display:flex;\n`\nconst SubDetailsWrapper=styled.div`\n    display:inline-block;\n    flex:1;\n`\n\nconst TypesComp = styled.div`\n    display:inline-block;\n    border-radius:2vh;\n    margin:0 3px;\n    width:fit-content;\n    padding:2px 10px;\n    text-align:center;\n    background:${props=>Color.typesColor[props.type]};\n    color:${props=>Color.typesBgColor[props.type]};\n`\nconst MovesComp = styled.div`\n    display:inline-block;\n    border-radius:2vh;\n    margin:2px 3px;\n    width:fit-content;\n    padding:2px 10px;\n    text-align:center;\n    background:${Color.colorThree};\n    color:${Color.colorOne};\n`\nconst CatchButtonComp = styled.button`\n   float:right;\n   display:inline-block;\n   font-size:30px;\n   padding:5px 10px;\n   border-radius:10vh;\n   &:hover{\n    cursor:pointer;\n    background: ${Color.buttonColor2};\n    color: ${Color.colorOne}\n}\n`\nexport const ModalDetailPoke = (props)=>{\n    const data=props.dataModal\n    return(\n        <ModalComp show={props.show} type={props.type}>\n            {(data&&\n                <ModalContentComp>\n                <br/>\n                <br/>\n                <DetailsWrapper>\n                    <SubDetailsWrapper>\n                        <h1>Name: {data.name}</h1>\n                        <h3>Types</h3>\n                        <div style={{display:'inline'}}>{((data.types).map((r,i)=><TypesComp key={i} type={r.type.name}>{r.type.name}</TypesComp>))}</div>\n                        <h3>Moves</h3>\n                        <div style={{display:'scroll'}}>{((data.moves).slice(0, 5).map((r,i)=><MovesComp key={i} >{r.move.name}</MovesComp>))}</div>\n                    </SubDetailsWrapper>\n                    <div style={{display:'block',height:'fit-content',padding:20,borderRadius:'100%',background:colors.typesColor[data.types[0].type.name]}}>\n                        <ModalImageComp src={data.sprites.front_default ? data.sprites.front_default : data.sprites.back_default}/>\n\n                    </div>\n                </DetailsWrapper>\n                <div>\n                    <SimpleButton bg={Color.colorThree} cl={Color.colorOne} onClick={()=>props.closeFn()}>Close</SimpleButton>\n                    {/* <CatchButtonComp onClick={}>Catch</CatchButtonComp> */}\n                </div>\n\n        </ModalContentComp>\n            )}\n        </ModalComp>\n    )\n}\n\n\n\n","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\n\n// # Mobile\n// only screen and (min-width: 3600px)\n\n// # Tablet\n// only screen and (min-width: 768px)\n\n// # Desktop\n// only screen and (min-width: 992px)\n\n// # Huge\n// only screen and (min-width: 1280px)\n\nconst HeaderHomeComp=styled.nav`\n    font-family: 'Yusei Magic', sans-serif;\n    width:800px;\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n    margin:0px auto;\n    background:${Color.colorOne};\n    box-sizing:border-box;\n    padding:30px 0px;\n    position:fixed;\n    border-bottom-left-radius:5vh;\n    border-bottom-right-radius:5vh;\n`\nexport const HeaderHome = (props)=>{\n    return(\n        <HeaderHomeComp>\n            {(props.children)}\n        </HeaderHomeComp>\n    )\n}\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/pokeball.e57f7ae6.svg\";","import styled from  '@emotion/styled'\nimport {Color} from  '../theme'\nimport Pokeball from '../images/pokeball.svg';\nconst LoaderOverlay=styled.div`\n    font-family: 'Yusei Magic', sans-serif;\n    display: 'inline-block';\n    position: fixed; /* Stay in place */\n    z-index: 5;\n    padding-top: 100px;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(255,255,255);\n    background-color: rgba(255,255,255,0.4);\n\n    `\nconst animType={\n    ubounce:'animation: bounce 1000ms infinite;',\n    flash:'animation: flash 3000ms infinite;',\n    tada:'animation: tada 1200ms infinite;',\n    pulse:'animation: pulse 1000ms infinite;',\n    swing:'animation: swing 3000ms infinite;'\n}\nconst PokeBallComp=styled.img`\n    display:block;\n    width: 100px;\n    height: 100px;\n    margin: 50% auto;\n\n    animation: bounce 1000ms infinite;\n`\n\nexport const PokeBallLoader = (props)=>{\n    return(\n        <LoaderOverlay>\n            <PokeBallComp src={Pokeball}/>\n        </LoaderOverlay>\n\n    )\n}\n\n\n\n","import { gql } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: process.env.REACT_APP_BACKEND_BASE_URL,\n    cache: new InMemoryCache()\n  });\n\n\nexport const fetchListPokemon = async() =>{\n   try{\n        return new Promise((resolve,reject)=>{\n                        client.query({\n                            query: gql`\n                                query{\n                                    pokemons(limit:100){\n                                        next\n                                        previous\n                                        count\n                                        status\n                                        results{\n                                            url\n                                        }\n                                    }\n                                }\n                            `\n                        })\n                        .then(res=>resolve(res.data.pokemons))\n                        .catch(err=>reject(err))\n\n\n                    })\n\n\n   }catch(err){\n       console.log('Erro fetch Pokemons>>>>',err);\n   }\n}\nexport const navigateData = async(url) =>{\n    try{\n        return new Promise(async(resolve,reject)=>{\n            const data=await fetch(url).then(res=>res.json()).catch(err=>reject(err))\n            resolve(data)\n        })\n    }catch(err){\n        console.log('Erro fetch Pokemons>>>>',err);\n    }\n }\n\n","import React,{useEffect} from 'react'\n\n//themes\nimport {ImgLogo} from '../components/Images'\nimport {Images,Color} from '../theme'\n//components\nimport {Container} from '../components/Containers'\nimport {GridView} from '../components/List'\nimport {CardPokemon} from '../components/Card'\nimport {ModalDetailPoke} from '../components/Modals'\nimport {HeaderHome} from '../components/Header'\nimport {PokeBallLoader} from '../components/Loader'\nimport {SimpleButton} from '../components/Buttons'\n//service\nimport {fetchListPokemon,navigateData} from '../graphql/pokemon'\n\n\nfunction ListPokemon(){\n  const [data,setData] = React.useState([])\n  const [nextUrl,setNextUrl] = React.useState([])\n  const [prevUrl,setPrevUrl] = React.useState([])\n  const [totalAll,setTotalAll] = React.useState(0)\n  const [isRequest,setIsRequest] = React.useState(false)\n  const [dataModal,setDataModal] = React.useState(null)\n  const [isShowModal,setIsShowModal] = React.useState(false)\n\n  const getPokemonData = async(pokemon) =>{\n    return await Promise.all(\n        pokemon.map(async r=>{\n            return await fetch(r.url).then(res=>res.json())\n        })\n    )\n  }\n  const navigate = async(url) =>{\n    setIsRequest(true)\n    navigateData(url)\n    .then(async data=>{\n        setNextUrl(data.next)\n        setPrevUrl(data.previous)\n        await setData(await getPokemonData(data.results))\n        setIsRequest(false)\n    })\n  }\n  function onClickItem(data){\n      setIsShowModal(true)\n      setDataModal(data)\n  }\n  useEffect(()=>{\n    setIsRequest(true)\n    fetchListPokemon()\n    .then(async data=>{\n        setNextUrl(data.next)\n        setPrevUrl(data.previous)\n        await setData(await getPokemonData(data.results))\n        setIsRequest(false)\n    })\n  },[])\n    return(\n        <Container>\n            <ModalDetailPoke closeFn={()=>setIsShowModal(false)} show={isShowModal} dataModal={dataModal}/>\n            <HeaderHome>\n               <center><SimpleButton onClick={()=>navigate(prevUrl)} bg={Color.colorTwo} cl={Color.backgroundContainerColor1}>Prev</SimpleButton>&nbsp;&nbsp;&nbsp;<ImgLogo src={Images.LogoPoke}/> &nbsp;&nbsp;<SimpleButton onClick={()=>navigate(nextUrl)} bg={Color.colorTwo} cl={Color.backgroundContainerColor1}>Next</SimpleButton></center>\n            </HeaderHome>\n\n            <br/>\n            <br/>\n            {(isRequest && <PokeBallLoader />)}\n            {(!isRequest &&\n                <GridView>\n                    {data.map(res=>(\n                        <CardPokemon\n                        onClick={()=>onClickItem(res)}\n                        key={res.id}\n                        type={res.types}\n                        pokeName={res.name}\n                        pokeImg={res.sprites.front_default ? res.sprites.front_default : res.sprites.back_default}/>\n                    ))}\n                </GridView>\n            )}\n        </Container>\n    )\n}\n\nexport default ListPokemon","import {createContext} from 'react'\n\n\nconst catchPokemon = () =>{\n    window.localStorage.setItem('caughtPokemon',[])\n}\nconst getCaughtPokemon = () =>{\n    window.localStorage.setItem('caughtPokemon',[])\n}\nconst renameCaughtPokemon = () =>{\n    window.localStorage.setItem('caughtPokemon',[])\n}\n\n\n\nconst PokeContext = createContext()\nconst PokeState = {catchPokemon,getCaughtPokemon,renameCaughtPokemon}\n\nexport default {PokeContext,PokeState}","import {useState,createContext} from 'react'\nimport ListPokemon from './pages/ListPokemon'\nimport { RootContainer } from \"./components/Containers\"\nimport Poke from  './context/pokemonContext'\n\nfunction App() {\n  const {PokeContext,PokeState} = Poke\n   return (\n    <PokeContext.Provider value={PokeState}>\n      <RootContainer>\n        <ListPokemon/>\n      </RootContainer>\n    </PokeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport \"normalize.css/normalize.css\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}